STDIR=~/dev/stm32/STM32Cube_FW_F4_V1.13.0

STINC=\
/Drivers/STM32F4xx_HAL_Driver/Src/ \
/Drivers/STM32F4xx_HAL_Driver/ \
/Drivers/BSP/STM32F4xx_Nucleo/ \
/Drivers/CMSIS/Include/ \
/Drivers/CMSIS/Device/ST/STM32F4xx/ \
/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc/startup_stm32f407xx.s

# /Middlewares/ST/STM32_USB_Host_Library/Core/ \
# /Middlewares/ST/STM32_USB_Host_Library/Class/CDC/ \

CFLAGS = -T../stm32_flash.ld
CFLAGS += -DSTM32F4 -DSTM32F407xx
CFLAGS += -mcpu=cortex-m4

include ../Makefile.st

SRCS += cube/startup_stm32f407xx.s

# Sources

# STDIR=lib
# 
# all:: Makefile.stm32
# 
# Makefile.stm32: ../stm32.sh Makefile
# 	../stm32.sh $(STDIR)
# 
# include Makefile.stm32
# 
# EFISRCS:=$(shell find efi/ -name "*.cpp")
# EFIHDRS:=$(shell find efi/ -name "*.h")
# 
# SRCS:=$(shell find src/ -name "*.cpp")
# HDRS:=$(shell find inc/ -name "*.h")
# 
# HDRS += $(EFIHDRS)
# SRCS += $(EFISRCS)
# 
# SRCS += lib/startup_stm32f4xx.s
# OBJS = $(SRCS:.c=.o) $(SRCS:.cpp=.o)
# 
# # Project name
# 
# PROJ_NAME=stm32efi
# DST=build
# 
# CC=arm-none-eabi-gcc
# CPP=arm-none-eabi-g++
# OBJCOPY=arm-none-eabi-objcopy
# SIZE=arm-none-eabi-size
# ELF=$(DST)/$(PROJ_NAME).elf
# 
# STDFLAGS = -g -Wall -DSTM32
# STDFLAGS += -Tstm32_flash.ld
# STDFLAGS += -mlittle-endian -mthumb -mthumb-interwork -mcpu=cortex-m4
# STDFLAGS += -mfpu=fpv4-sp-d16 -mfloat-abi=hard
# STDFLAGS += -mno-unaligned-access
# STDFLAGS += -Iefi -Iinc $(STINCS)
# STDFLAGS += -I../STM32Cube_FW_F4_V1.5.0/Drivers/STM32F4xx_HAL_Driver/Inc
# 
# CPPFLAGS = $(STDFLAGS)
# 
# CFLAGS = $(STDFLAGS)
# CFLAGS += -std=gnu99 -nostartfiles
# CFLAGS += -fsingle-precision-constant -Wdouble-promotion
# 
# # CFLAGS += -specs=nosys.specs
# # CPPFLAGS += --specs=rdimon.specs -lc -lrdimon
# 
# %.o : %.c
# 	$(CC) $(CFLAGS) -c -o $@ $^
# 
# all:: $(STLIB) $(ELF)
# 	$(SIZE) $(ELF)
# 
# $(ELF): $(SRCS) $(STLIB) Makefile
# 	$(CPP) $(CPPFLAGS) $(SRCS) -o $@ -lm $(STLIB)
# 	$(OBJCOPY) -O ihex $@ $(DST)/$(PROJ_NAME).hex
# 	$(OBJCOPY) -O binary $@ $(DST)/$(PROJ_NAME).bin
# 
# clean:
# 	rm -f $(STOBJS) $(DST)/$(PROJ_NAME).* Makefile.stm32
# 
# STLINK=~/dev/stm32/stlink
# 
# term:
# 	-killall gtkterm
# 	gtkterm -s 57600 -p /dev/ttyACM1&
# 
# burn: $(DST)/$(PROJ_NAME).elf
# 	$(STLINK)/st-flash write $(DST)/$(PROJ_NAME).bin 0x8000000
# 
# server:
# 	$(STLINK)/st-util
